name: Update LM Arena Leaderboard

on:
  # 定时任务：每隔6小时运行一次 (UTC时间)
  schedule:
    - cron: '0 */6 * * *'
  
  # 允许手动触发此工作流
  workflow_dispatch:

jobs:
  update-data:
    runs-on: ubuntu-latest # 使用最新的 Ubuntu 操作系统环境

    steps:
      - name: Checkout repository # 检出您的仓库代码
        uses: actions/checkout@v4

      - name: Set up Python # 设置 Python 环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.9' # 指定 Python 版本，可根据需要调整

      - name: Install dependencies # 安装必要的 Python 库
        run: |
          python -m pip install --upgrade pip
          pip install pandas requests

      - name: Run Leaderboard Update Script # 运行 Python 脚本
        id: run_script # 给这个步骤一个ID，以便后续步骤引用它的输出
        run: python ./scripts/update_lmarena.py
        # 如果脚本成功更新了文件（返回0），则后续步骤继续
        # 如果脚本没有更新文件或出错（返回非0），则此步骤失败，后续步骤可能不会运行

      - name: Commit and push if changes # 如果文件有变化，则提交并推送
        # 只有当上一步（运行脚本）成功时才执行此步骤
        if: success() # 确保上一步没有因为错误而失败
        run: |
          # 检查是否有实际的文件更改需要提交
          # git diff --exit-code 会在有差异时返回非0，没有差异时返回0
          git diff --quiet other/model_rank/lmarena.md || \
          (
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add other/model_rank/lmarena.md
            git commit -m "Auto: Update LM Arena Leaderboard data"
            git push
          )
          echo "No changes to commit or changes committed."
