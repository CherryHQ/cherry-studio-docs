name: Translate Documentation

on:
  push:
    branches:
      - main
    paths:
      - '**/*.md'
      - '.gitbook/**'
  workflow_dispatch: # 允许手动触发

jobs:
  translate:
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许写入仓库内容
    strategy:
      matrix:
        lang_code: ["en", "es", "fr", "de", "ja", "ko", "ru", "pt", "it", "ar", "hi", "bn", "id", "th", "vi", "tr", "pl", "nl", "zh-tw"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整的历史记录，以便进行文件差异比较

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-genai python-frontmatter openai # 移除 markdown-it-py

      - name: Run Translation Script
        env:
          GEMINI_API_KEY: ${{ secrets.AIHUBMIX }} # 从GitHub Secrets获取API密钥
          DEEPSEEK_API_KEY: ${{ secrets.PPIO }} # 从GitHub Secrets获取DeepSeek API密钥
          PUSH_BEFORE_SHA: ${{ github.event.before }} # 获取推送前的SHA
          PUSH_AFTER_SHA: ${{ github.sha }} # 获取推送后的SHA
        id: run-translation # 添加 id 以便引用输出
        run: python .github/scripts/translate_docs.py ${{ matrix.lang_code }}

      - name: Upload translated docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.run-translation.outputs.lang_dir }}
          # 使用多行字符串来定义路径，包括一个包含模式和排除模式
          path: |
            i18n/${{ steps.run-translation.outputs.lang_dir }}/**
            !i18n/${{ steps.run-translation.outputs.lang_dir }}/.github/**
          retention-days: 1
          include-hidden-files: true # 确保包含以点开头的文件夹（如 .gitbook）

      - name: Upload translation status artifact
        uses: actions/upload-artifact@v4
        with:
          name: translation-status-${{ matrix.lang_code }}
          path: translation_status_output/status_${{ matrix.lang_code }}.json
          retention-days: 1

  commit_and_push:
    runs-on: ubuntu-latest
    needs: translate # 确保在所有翻译 job 完成后运行
    permissions:
      contents: write # 允许写入仓库内容
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 获取完整的历史记录

      - name: Download all translated docs artifacts
        uses: actions/download-artifact@v4
        with:
          path: i18n/ # 下载到 i18n 目录下，会自动合并

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Download all translation status artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: translation-status-* # 使用 pattern 参数下载所有匹配的 artifact
          path: translation_status_output/ # 下载到临时目录

      - name: Summarize translation results
        run: |
          python .github/scripts/summarize_translation.py translation_status_output/
        continue-on-error: true # 确保即使 summarize_translation.py 失败（有语言翻译失败），工作流也能继续执行 commit_and_push

      - name: Clean up temporary status directories in i18n
        run: |
          # 清理由 artifact 下载产生的临时状态目录，避免其被提交到 Git 仓库。
          find i18n/ -maxdepth 1 -type d -name "translation-status-*" -exec rm -rf {} +
        continue-on-error: true # 确保即使没有找到文件也不会失败

      - name: Commit and push changes
        run: |
          git add i18n/
          git diff --cached --quiet || git commit -m "Auto: Translate documentation to multiple languages"
          git push || echo "No changes to commit or push."
